-- главу про запуск первой программы на ассемблере я пропущу, хотя, могу попробовать вставить текст из того файлика, который делал с обычными комментариями к коду насма (nasm). Впрочем, там ничего не сохранилось.

ОСНОВЫ СИСТЕМЫ КОМАНД I386

регистр - некое электронное устройство в составе проца, в котором может содержаться определенное количество данных в виде двоичных разрядов.

регистры можно поделить на:
- регистры общего назначения (EAX, EBX, ECX, EDX, ESI, EBP, ESP) -  буква Е означает extended - расширенный регистр. Регистр делится на старшую часть и младшую, младшая обозначается тем же именем регистра, только без буквы Е вначале, то есть младший регистр - регистр не расширенный.
В свою очередь эти регистры делятся еще и на восьмибитовые регистры (например - AX делится на AL AH - high and low register)

** буквы регистрам даны неспроста EAX - регистр-аккумулятор - регистр, учавствующий в любый арифметических операциях в роли одного и операндов в качестве места, куда стоило бы поместить результат. Название пошло из бородатых годов еще в самого фон Неймана.

- сегментные регистры (CS, DS, SS, ES, GS, FS) - в плоской модели памяти не используются

- специальные регистры (счетчик команд, или он же - указатель текущей инструкции EIP - хранит в себе адрес ячейки памяти с которой следует считывать следующую машинную инструкцию и регистр флагов FLAGS - используется для условных переходов)

ZF - флаг нулевого результата - устанавливается в ходе выполнения арифметических операций и операций сравнения, если в результате операции получился ноль - флаг устанавливается в единицу

CF - флаг переноса после выполнения арифметики над беззнаковыми числами, если требуется перенос в старший бит, то есть если в регистр не поместился результат.

SF - sign flag - устанавливается равным старшему биту, который для знаковых чисел соответствует знаку числа

OF - overflow flag - флаг переполнения - выставляется в единицу, если произошло переполнение 

DF - direction flag - флаг направления, устанавливается командой std и обнуляется командой cld - в зависимости от его состояния строковые операции выполняются в прямом или обратном порядке

PF & AF - флаг четности и флаг полупеноса

IF & TF - флаги разрешения прерываний и ловушки - доступны только в привелегированном режиме работы процессора



        ПАМЯТЬ ПОЛЬЗОВАТЕЛЬСКОЙ ЗАДАЧИ. СЕГМЕНТЫ.

емкость регистров слишком мала для того, чтобы в них уместить какую-то более менее сложную программу, они служат для хранения настроек и для хранения информации, которая может понадобиться срочно.

поэтому, для хранения информации программа может пользоваться оперативной памятью. В архитектуре фон Неймана и сама программа располагается в ячейках оперативной памяти, которые сами по себе одинаковы и меют адрес из единого адресного пространства. Одна ячейка памяти способна хранить один байт, то есть восемь бит информации.

Немотря на то, что все ячейки одинаковы, ОС может ограничить доступ к некоторым ячейкам. Некотороые области памяти могут быть доступны только для чтения, но не для изменения, не всякую область разрешено рассматривать как бинарную инфу, то есть заносить адреса этих ячеек в регистр счетчика команд. 

// Фактически, мы наблюдаем отдельное адресное пространство для машинных команд.

Если задаче позволено рассматривать содержимое области памяти как фрагмент бинаря, то говорят, что эта область памяти доступна на исполнение.

область памяти, которую задача может модифицировать - доступ на запись.






                                                    


